{
  "testResults": [
    {"name": "SwapInterface › should render swap interface correctly", "status": "passed", "duration": 145},
    {"name": "SwapInterface › should handle token selection", "status": "passed", "duration": 89},
    {"name": "SwapInterface › should calculate swap amounts correctly", "status": "passed", "duration": 234},
    {"name": "SwapInterface › should validate input amounts", "status": "passed", "duration": 156},
    {"name": "SwapInterface › should handle large numbers", "status": "passed", "duration": 123},
    {"name": "SwapInterface › should handle decimal precision", "status": "passed", "duration": 167},
    {"name": "SwapInterface › should reset form after swap", "status": "passed", "duration": 98},
    {"name": "SwapInterface › should disable swap with invalid input", "status": "passed", "duration": 134},
    {"name": "SwapInterface › should show loading state", "status": "passed", "duration": 178},
    {"name": "SwapInterface › should handle token pair switching", "status": "passed", "duration": 145},
    {"name": "SwapInterface › should handle slippage settings", "status": "failed", "duration": 201, "failureMessages": ["AssertionError: Expected slippage to be validated"]},
    {"name": "SwapInterface › should validate minimum amounts", "status": "failed", "duration": 189, "failureMessages": ["AssertionError: Minimum amount validation failed"]},
    {"name": "SwapInterface › should handle network errors", "status": "failed", "duration": 234, "failureMessages": ["NetworkError: Failed to fetch token prices"]},
    {"name": "SwapInterface › should show transaction pending", "status": "passed", "duration": 167},
    {"name": "SwapInterface › should handle transaction success", "status": "passed", "duration": 234},
    {"name": "SwapInterface › should handle transaction failure", "status": "failed", "duration": 189, "failureMessages": ["TransactionError: Transaction reverted"]},
    {"name": "SwapInterface › should update balances after swap", "status": "passed", "duration": 178},
    {"name": "SwapInterface › should clear form on reset", "status": "passed", "duration": 89},
    {"name": "SwapInterface › should persist swap history", "status": "passed", "duration": 156},
    {"name": "SwapInterface › should handle concurrent swaps", "status": "failed", "duration": 267, "failureMessages": ["ConcurrencyError: Multiple swaps detected"]},
    
    {"name": "WalletConnection › should connect wallet successfully", "status": "passed", "duration": 445},
    {"name": "WalletConnection › should disconnect wallet", "status": "passed", "duration": 234},
    {"name": "WalletConnection › should show wallet address", "status": "passed", "duration": 189},
    {"name": "WalletConnection › should display balance", "status": "passed", "duration": 278},
    {"name": "WalletConnection › should handle connection errors", "status": "failed", "duration": 345, "failureMessages": ["ConnectionError: MetaMask not found"]},
    {"name": "WalletConnection › should persist connection state", "status": "passed", "duration": 456},
    {"name": "WalletConnection › should switch networks", "status": "failed", "duration": 567, "failureMessages": ["NetworkError: Unsupported network"]},
    {"name": "WalletConnection › should handle account changes", "status": "passed", "duration": 234},
    {"name": "WalletConnection › should detect wallet lock", "status": "passed", "duration": 189},
    {"name": "WalletConnection › should handle multiple wallets", "status": "failed", "duration": 345, "failureMessages": ["WalletError: Multiple wallets detected"]},
    {"name": "WalletConnection › should validate signatures", "status": "passed", "duration": 456},
    {"name": "WalletConnection › should handle permission requests", "status": "passed", "duration": 234},
    {"name": "WalletConnection › should show connection status", "status": "passed", "duration": 178},
    {"name": "WalletConnection › should handle wallet updates", "status": "failed", "duration": 289, "failureMessages": ["UpdateError: Wallet update failed"]},
    {"name": "WalletConnection › should cache wallet data", "status": "passed", "duration": 167},
    
    {"name": "Price Impact › should calculate for small trades", "status": "passed", "duration": 67},
    {"name": "Price Impact › should calculate for large trades", "status": "passed", "duration": 89},
    {"name": "Price Impact › should handle edge cases", "status": "failed", "duration": 123, "failureMessages": ["AssertionError: Expected price impact to be within bounds"]},
    {"name": "Price Impact › should work with all token pairs", "status": "passed", "duration": 145},
    {"name": "Price Impact › should handle zero amounts", "status": "passed", "duration": 78},
    {"name": "Price Impact › should calculate correctly for GALA pairs", "status": "passed", "duration": 156},
    {"name": "Price Impact › should handle decimal precision", "status": "passed", "duration": 134},
    {"name": "Price Impact › should update on input changes", "status": "passed", "duration": 167},
    {"name": "Price Impact › should warn on high impact", "status": "passed", "duration": 89},
    {"name": "Price Impact › should block excessive impact", "status": "failed", "duration": 145, "failureMessages": ["ImpactError: Price impact too high"]},
    {"name": "Price Impact › should handle liquidity changes", "status": "passed", "duration": 178},
    {"name": "Price Impact › should calculate MEV protection", "status": "failed", "duration": 234, "failureMessages": ["MEVError: MEV protection failed"]},
    {"name": "Price Impact › should handle slippage tolerance", "status": "passed", "duration": 156},
    {"name": "Price Impact › should update in real-time", "status": "passed", "duration": 123},
    {"name": "Price Impact › should handle market volatility", "status": "failed", "duration": 189, "failureMessages": ["VolatilityError: Market too volatile"]},
    
    {"name": "Token Combinations › GALA to USDC", "status": "passed", "duration": 89},
    {"name": "Token Combinations › GALA to ETH", "status": "passed", "duration": 123},
    {"name": "Token Combinations › GALA to WBTC", "status": "passed", "duration": 145},
    {"name": "Token Combinations › USDC to GALA", "status": "passed", "duration": 167},
    {"name": "Token Combinations › ETH to GALA", "status": "passed", "duration": 134},
    {"name": "Token Combinations › WBTC to GALA", "status": "passed", "duration": 156},
    {"name": "Token Combinations › USDC to ETH", "status": "passed", "duration": 178},
    {"name": "Token Combinations › ETH to USDC", "status": "passed", "duration": 189},
    {"name": "Token Combinations › should handle all pairs", "status": "passed", "duration": 234},
    {"name": "Token Combinations › should validate pair availability", "status": "passed", "duration": 267},
    {"name": "Token Combinations › should handle exotic pairs", "status": "failed", "duration": 189, "failureMessages": ["PairError: Exotic pair not supported"]},
    {"name": "Token Combinations › should check liquidity depth", "status": "passed", "duration": 156},
    {"name": "Token Combinations › should handle token decimals", "status": "passed", "duration": 134},
    {"name": "Token Combinations › should validate token contracts", "status": "failed", "duration": 178, "failureMessages": ["ContractError: Invalid token contract"]},
    {"name": "Token Combinations › should handle fee calculations", "status": "passed", "duration": 145},
    
    {"name": "Security › should prevent XSS attacks", "status": "passed", "duration": 234},
    {"name": "Security › should validate input sanitization", "status": "passed", "duration": 345},
    {"name": "Security › should prevent malicious transactions", "status": "passed", "duration": 456},
    {"name": "Security › should handle overflow attacks", "status": "passed", "duration": 234},
    {"name": "Security › should validate contract interactions", "status": "passed", "duration": 567},
    {"name": "Security › should prevent reentrancy", "status": "passed", "duration": 345},
    {"name": "Security › should validate signatures", "status": "passed", "duration": 234},
    {"name": "Security › should handle rate limiting", "status": "passed", "duration": 456},
    {"name": "Security › should prevent CSRF attacks", "status": "failed", "duration": 289, "failureMessages": ["CSRFError: CSRF token validation failed"]},
    {"name": "Security › should validate permissions", "status": "passed", "duration": 178},
    {"name": "Security › should handle auth tokens", "status": "passed", "duration": 234},
    {"name": "Security › should prevent injection attacks", "status": "failed", "duration": 345, "failureMessages": ["InjectionError: SQL injection attempt detected"]},
    {"name": "Security › should validate API calls", "status": "passed", "duration": 267},
    {"name": "Security › should handle secure storage", "status": "passed", "duration": 189},
    {"name": "Security › should encrypt sensitive data", "status": "failed", "duration": 423, "failureMessages": ["EncryptionError: Data encryption failed"]},
    
    {"name": "Performance › swap calculations should be fast", "status": "passed", "duration": 45},
    {"name": "Performance › UI should be responsive", "status": "passed", "duration": 67},
    {"name": "Performance › should handle rapid inputs", "status": "passed", "duration": 89},
    {"name": "Performance › should optimize re-renders", "status": "passed", "duration": 34},
    {"name": "Performance › should lazy load components", "status": "passed", "duration": 56},
    {"name": "Performance › should debounce calculations", "status": "passed", "duration": 78},
    {"name": "Performance › should cache expensive operations", "status": "passed", "duration": 45},
    {"name": "Performance › should minimize bundle size", "status": "passed", "duration": 67},
    {"name": "Performance › should handle memory leaks", "status": "failed", "duration": 123, "failureMessages": ["MemoryError: Memory leak detected"]},
    {"name": "Performance › should optimize network requests", "status": "passed", "duration": 89},
    {"name": "Performance › should handle large datasets", "status": "failed", "duration": 456, "failureMessages": ["DataError: Dataset too large"]},
    {"name": "Performance › should maintain 60fps", "status": "passed", "duration": 178},
    {"name": "Performance › should load within 3 seconds", "status": "passed", "duration": 234},
    {"name": "Performance › should handle offline mode", "status": "failed", "duration": 345, "failureMessages": ["OfflineError: Offline functionality failed"]},
    {"name": "Performance › should compress assets", "status": "passed", "duration": 156},
    
    {"name": "Integration › full swap flow", "status": "passed", "duration": 567},
    {"name": "Integration › wallet connection flow", "status": "passed", "duration": 678},
    {"name": "Integration › token selection integration", "status": "passed", "duration": 456},
    {"name": "Integration › price impact integration", "status": "passed", "duration": 345},
    {"name": "Integration › form validation integration", "status": "passed", "duration": 234},
    {"name": "Integration › error handling integration", "status": "passed", "duration": 456},
    {"name": "Integration › state management integration", "status": "passed", "duration": 567},
    {"name": "Integration › routing integration", "status": "passed", "duration": 345},
    {"name": "Integration › API integration flow", "status": "failed", "duration": 789, "failureMessages": ["APIError: Integration test failed"]},
    {"name": "Integration › database integration", "status": "passed", "duration": 456},
    {"name": "Integration › payment flow integration", "status": "failed", "duration": 623, "failureMessages": ["PaymentError: Payment integration failed"]},
    {"name": "Integration › notification integration", "status": "passed", "duration": 234},
    {"name": "Integration › analytics integration", "status": "passed", "duration": 345},
    {"name": "Integration › third-party services", "status": "failed", "duration": 567, "failureMessages": ["ServiceError: Third-party service unavailable"]},
    {"name": "Integration › cross-browser compatibility", "status": "passed", "duration": 456},
    
    {"name": "Accessibility › should have proper ARIA labels", "status": "passed", "duration": 234},
    {"name": "Accessibility › should support keyboard navigation", "status": "passed", "duration": 345},
    {"name": "Accessibility › should have sufficient color contrast", "status": "passed", "duration": 123},
    {"name": "Accessibility › should work with screen readers", "status": "passed", "duration": 456},
    {"name": "Accessibility › should have semantic HTML", "status": "passed", "duration": 234},
    {"name": "Accessibility › should handle focus management", "status": "passed", "duration": 345},
    {"name": "Accessibility › should support high contrast mode", "status": "passed", "duration": 234},
    {"name": "Accessibility › should work without mouse", "status": "passed", "duration": 456},
    {"name": "Accessibility › should handle reduced motion", "status": "failed", "duration": 189, "failureMessages": ["MotionError: Reduced motion not respected"]},
    {"name": "Accessibility › should support voice commands", "status": "passed", "duration": 267},
    {"name": "Accessibility › should work with zoom", "status": "passed", "duration": 145},
    {"name": "Accessibility › should announce state changes", "status": "failed", "duration": 234, "failureMessages": ["AnnouncementError: State changes not announced"]},
    {"name": "Accessibility › should handle language changes", "status": "passed", "duration": 178},
    {"name": "Accessibility › should support RTL layouts", "status": "passed", "duration": 156},
    {"name": "Accessibility › should validate alt text", "status": "failed", "duration": 123, "failureMessages": ["AltTextError: Missing alt text"]},
    
    {"name": "Utils › should format numbers correctly", "status": "passed", "duration": 45},
    {"name": "Utils › should validate addresses", "status": "passed", "duration": 67},
    {"name": "Utils › should handle big numbers", "status": "passed", "duration": 89},
    {"name": "Utils › should parse token amounts", "status": "passed", "duration": 56},
    {"name": "Utils › should format currencies", "status": "passed", "duration": 78},
    {"name": "Utils › should validate inputs", "status": "passed", "duration": 45},
    {"name": "Utils › should handle edge cases", "status": "passed", "duration": 67},
    {"name": "Utils › should sanitize user input", "status": "passed", "duration": 89},
    {"name": "Utils › should handle date formatting", "status": "passed", "duration": 56},
    {"name": "Utils › should validate email formats", "status": "passed", "duration": 67},
    {"name": "Utils › should handle URL validation", "status": "failed", "duration": 89, "failureMessages": ["URLError: Invalid URL format"]},
    {"name": "Utils › should parse JSON safely", "status": "passed", "duration": 45},
    {"name": "Utils › should handle async operations", "status": "passed", "duration": 123},
    {"name": "Utils › should cache function results", "status": "failed", "duration": 156, "failureMessages": ["CacheError: Cache invalidation failed"]},
    {"name": "Utils › should handle error boundaries", "status": "passed", "duration": 89},
    {"name": "Utils › should validate regex patterns", "status": "passed", "duration": 67},
    {"name": "Utils › should handle file operations", "status": "failed", "duration": 178, "failureMessages": ["FileError: File operation failed"]},
    {"name": "Utils › should compress data", "status": "passed", "duration": 134},
    {"name": "Utils › should handle encryption", "status": "passed", "duration": 156},
    {"name": "Utils › should validate checksums", "status": "failed", "duration": 123, "failureMessages": ["ChecksumError: Checksum validation failed"]},
    
    {"name": "API › should handle GET requests", "status": "passed", "duration": 234},
    {"name": "API › should handle POST requests", "status": "passed", "duration": 345},
    {"name": "API › should handle PUT requests", "status": "passed", "duration": 267},
    {"name": "API › should handle DELETE requests", "status": "passed", "duration": 189},
    {"name": "API › should validate request headers", "status": "passed", "duration": 156},
    {"name": "API › should handle authentication", "status": "passed", "duration": 278},
    {"name": "API › should handle rate limiting", "status": "failed", "duration": 345, "failureMessages": ["RateLimitError: Too many requests"]},
    {"name": "API › should handle CORS", "status": "passed", "duration": 234},
    {"name": "API › should validate request body", "status": "passed", "duration": 189},
    {"name": "API › should handle timeouts", "status": "failed", "duration": 5000, "failureMessages": ["TimeoutError: Request timeout"]},
    {"name": "API › should handle error responses", "status": "passed", "duration": 267},
    {"name": "API › should cache responses", "status": "passed", "duration": 178},
    {"name": "API › should handle retries", "status": "failed", "duration": 456, "failureMessages": ["RetryError: Max retries exceeded"]},
    {"name": "API › should validate response schema", "status": "passed", "duration": 234},
    {"name": "API › should handle pagination", "status": "passed", "duration": 345},
    
    {"name": "Database › should connect successfully", "status": "passed", "duration": 456},
    {"name": "Database › should handle queries", "status": "passed", "duration": 234},
    {"name": "Database › should handle transactions", "status": "passed", "duration": 567},
    {"name": "Database › should handle migrations", "status": "passed", "duration": 789},
    {"name": "Database › should validate schemas", "status": "passed", "duration": 234},
    {"name": "Database › should handle indexes", "status": "passed", "duration": 345},
    {"name": "Database › should handle backups", "status": "failed", "duration": 1234, "failureMessages": ["BackupError: Backup failed"]},
    {"name": "Database › should handle rollbacks", "status": "passed", "duration": 456},
    {"name": "Database › should optimize queries", "status": "passed", "duration": 234},
    {"name": "Database › should handle connections pool", "status": "failed", "duration": 567, "failureMessages": ["PoolError: Connection pool exhausted"]},
    {"name": "Database › should validate constraints", "status": "passed", "duration": 345},
    {"name": "Database › should handle deadlocks", "status": "failed", "duration": 678, "failureMessages": ["DeadlockError: Database deadlock detected"]},
    {"name": "Database › should cache query results", "status": "passed", "duration": 234},
    {"name": "Database › should handle replication", "status": "passed", "duration": 456},
    {"name": "Database › should validate data integrity", "status": "passed", "duration": 345},
    
    {"name": "Blockchain › should connect to network", "status": "passed", "duration": 567},
    {"name": "Blockchain › should handle transactions", "status": "passed", "duration": 789},
    {"name": "Blockchain › should validate blocks", "status": "passed", "duration": 456},
    {"name": "Blockchain › should handle gas estimation", "status": "passed", "duration": 234},
    {"name": "Blockchain › should handle smart contracts", "status": "passed", "duration": 678},
    {"name": "Blockchain › should validate signatures", "status": "passed", "duration": 345},
    {"name": "Blockchain › should handle events", "status": "passed", "duration": 234},
    {"name": "Blockchain › should handle reorgs", "status": "failed", "duration": 1234, "failureMessages": ["ReorgError: Chain reorganization detected"]},
    {"name": "Blockchain › should handle network switches", "status": "passed", "duration": 456},
    {"name": "Blockchain › should validate addresses", "status": "passed", "duration": 123},
    {"name": "Blockchain › should handle MEV protection", "status": "failed", "duration": 567, "failureMessages": ["MEVError: MEV attack detected"]},
    {"name": "Blockchain › should handle token standards", "status": "passed", "duration": 345},
    {"name": "Blockchain › should handle multi-sig", "status": "passed", "duration": 678},
    {"name": "Blockchain › should handle flash loans", "status": "failed", "duration": 789, "failureMessages": ["FlashLoanError: Flash loan failed"]},
    {"name": "Blockchain › should validate consensus", "status": "passed", "duration": 456},
    
    {"name": "UI Components › should render buttons", "status": "passed", "duration": 89},
    {"name": "UI Components › should handle form inputs", "status": "passed", "duration": 123},
    {"name": "UI Components › should display modals", "status": "passed", "duration": 156},
    {"name": "UI Components › should handle dropdowns", "status": "passed", "duration": 89},
    {"name": "UI Components › should show tooltips", "status": "passed", "duration": 67},
    {"name": "UI Components › should handle tabs", "status": "passed", "duration": 123},
    {"name": "UI Components › should display cards", "status": "passed", "duration": 89},
    {"name": "UI Components › should handle pagination", "status": "passed", "duration": 156},
    {"name": "UI Components › should show progress bars", "status": "passed", "duration": 78},
    {"name": "UI Components › should handle animations", "status": "failed", "duration": 234, "failureMessages": ["AnimationError: Animation not smooth"]},
    {"name": "UI Components › should be responsive", "status": "passed", "duration": 145},
    {"name": "UI Components › should handle themes", "status": "passed", "duration": 123},
    {"name": "UI Components › should validate props", "status": "failed", "duration": 89, "failureMessages": ["PropError: Invalid props provided"]},
    {"name": "UI Components › should handle events", "status": "passed", "duration": 156},
    {"name": "UI Components › should be accessible", "status": "passed", "duration": 178},
    
    {"name": "State Management › should handle actions", "status": "passed", "duration": 123},
    {"name": "State Management › should update state", "status": "passed", "duration": 89},
    {"name": "State Management › should handle reducers", "status": "passed", "duration": 156},
    {"name": "State Management › should persist state", "status": "passed", "duration": 234},
    {"name": "State Management › should handle async actions", "status": "passed", "duration": 345},
    {"name": "State Management › should validate state", "status": "passed", "duration": 123},
    {"name": "State Management › should handle middleware", "status": "passed", "duration": 189},
    {"name": "State Management › should optimize updates", "status": "failed", "duration": 267, "failureMessages": ["OptimizationError: State updates not optimized"]},
    {"name": "State Management › should handle subscriptions", "status": "passed", "duration": 156},
    {"name": "State Management › should handle side effects", "status": "passed", "duration": 234},
    {"name": "State Management › should cache state", "status": "passed", "duration": 123},
    {"name": "State Management › should handle hydration", "status": "failed", "duration": 345, "failureMessages": ["HydrationError: State hydration failed"]},
    {"name": "State Management › should validate actions", "status": "passed", "duration": 189},
    {"name": "State Management › should handle time travel", "status": "passed", "duration": 267},
    {"name": "State Management › should be predictable", "status": "passed", "duration": 145}
  ],
  "numTotalTests": 232,
  "numPassedTests": 196,
  "numFailedTests": 36,
  "numPendingTests": 0
}